[{"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\index.js":"1","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\reportWebVitals.js":"2","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\store.js":"3","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\app\\App.js":"4","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.reducers.js":"5","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.actiontypes.js":"6","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\header\\Header.component.jsx":"7","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.action.js":"8","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.selector.js":"9","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\utils\\error.logger.js":"10","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\user-persona\\userPersona.component.jsx":"11","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\utils\\server.js":"12","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\stripe-checkout\\Stripe-checkout.component.jsx":"13","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\home-component\\home.component.jsx":"14","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\NewSurveyDashboard.jsx":"15","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\footer\\Footer.component.jsx":"16","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\add-new-survey\\add-new-surveys-form.jsx":"17","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\custum-component\\form-input\\form-input.component.jsx":"18","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\custum-component\\error\\error.component.jsx":"19","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\Survey-stepper.container.jsx":"20","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\custum-component\\stepper-component\\stepper.component.jsx":"21","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\display-user-from-data\\ShowUserFormdataComponent.jsx":"22","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\user-response\\UserResponse.component.jsx":"23"},{"size":778,"mtime":1609776093730,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":509,"mtime":1610196715073,"results":"27","hashOfConfig":"25"},{"size":1549,"mtime":1610635340471,"results":"28","hashOfConfig":"25"},{"size":3906,"mtime":1610644121170,"results":"29","hashOfConfig":"25"},{"size":1333,"mtime":1610629920189,"results":"30","hashOfConfig":"25"},{"size":5792,"mtime":1610440244165,"results":"31","hashOfConfig":"25"},{"size":5704,"mtime":1610640599817,"results":"32","hashOfConfig":"25"},{"size":1633,"mtime":1610632587592,"results":"33","hashOfConfig":"25"},{"size":230,"mtime":1610083066527,"results":"34","hashOfConfig":"25"},{"size":5698,"mtime":1610449420979,"results":"35","hashOfConfig":"25"},{"size":209,"mtime":1609840128074,"results":"36","hashOfConfig":"25"},{"size":1004,"mtime":1610441830052,"results":"37","hashOfConfig":"25"},{"size":1280,"mtime":1610441373635,"results":"38","hashOfConfig":"25"},{"size":1123,"mtime":1610449560722,"results":"39","hashOfConfig":"25"},{"size":1381,"mtime":1610436820782,"results":"40","hashOfConfig":"25"},{"size":4356,"mtime":1610570483640,"results":"41","hashOfConfig":"25"},{"size":531,"mtime":1610384926486,"results":"42","hashOfConfig":"25"},{"size":460,"mtime":1610447951166,"results":"43","hashOfConfig":"25"},{"size":569,"mtime":1610471764328,"results":"44","hashOfConfig":"25"},{"size":7829,"mtime":1610630436229,"results":"45","hashOfConfig":"25"},{"size":1465,"mtime":1610628202793,"results":"46","hashOfConfig":"25"},{"size":3649,"mtime":1610646595088,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"18942s7",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\index.js",[],["98","99"],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\reportWebVitals.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\store.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\app\\App.js",["100"],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.reducers.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.actiontypes.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\header\\Header.component.jsx",["101"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\n\r\n// react material\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\n// custum componnsts \r\nimport UserPersona from '../user-persona/userPersona.component'\r\n// action creator\r\nimport {startFetchingUserLoginDetailsAsync, startLoginWithGoogle} from '../../store/authReducers/auth.action';\r\n//  selectors\r\nimport {\r\n    selectIsFetchingUserAuth, \r\n    selectIsUserLogedIn,\r\n    selectIsUserAuthError,\r\n    selectLogedInUserData\r\n} from '../../store/authReducers/auth.selector';\r\n\r\n\r\n// list component for drawer\r\n\r\nconst DrawerList = ({classes, toggleDrawer}) => (\r\n  <div className={classes.list} role=\"presentation\"\r\n    onClick={toggleDrawer(false)} onKeyDown={toggleDrawer(false)}>\r\n    <List>\r\n      {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n        <ListItem button key={text}>\r\n          <ListItemIcon> <InboxIcon /></ListItemIcon>\r\n          <ListItemText primary={text} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n    <Divider />\r\n    <List>\r\n      {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n        <ListItem button key={text}>\r\n          <ListItemIcon><MailIcon/></ListItemIcon>\r\n          <ListItemText primary={text} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  </div>\r\n);\r\n\r\n// using react material UI with class based components\r\nconst useStyles = theme => ({\r\n    root: {\r\n         flexGrow: 1,\r\n    },\r\n    appbar:{\r\n      minHeight: '72px'\r\n    },\r\n    menuButton: {\r\n            marginRight: theme.spacing(2),\r\n            \r\n    },\r\n    title: {\r\n            flexGrow: 1,\r\n            cursor: 'pointer'\r\n    },\r\n    Error: {\r\n        color: 'red'\r\n    },\r\n    list: {\r\n      width: 250,\r\n    },\r\n    circularSpinner: {\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n});\r\nclass HeaderCompoennt extends React.Component {\r\n    state={showDrowser: false}\r\n    componentDidMount(){  this.props.startFetchingLoginDetails();}\r\n    toggleDrawer = (open) => (event) => {\r\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n        return;\r\n      }\r\n  \r\n      this.setState({showDrowser: open });\r\n    };\r\n    //  list for drawer\r\n    render(){\r\n        const {classes, isLoading, isUserLoggedIn, isError, //this.useStyles(); \r\n                userData} =  this.props; \r\n      \r\n        return (\r\n          <div className={classes.root}>\r\n            <AppBar className={classes.appbar} position=\"static\">\r\n              <Toolbar>\r\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" \r\n                            aria-label=\"menu\" onClick={this.toggleDrawer(true)} >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                  <Link to='/'>Survey Generator</Link> \r\n                </Typography>\r\n                { isLoading && <CircularProgress  className ={classes.circularSpinner} color=\"secondary\"/>}\r\n                { !isLoading && isError && <Typography variant=\"h6\"  color=\"secondary\"> Error Ocuured</Typography>} \r\n                { !isLoading && !isError && !isUserLoggedIn && <Button href='/auth/google' color=\"inherit\">Login with google</Button>}\r\n                { !isLoading && !isError && isUserLoggedIn  && <UserPersona userData = {userData}/> }\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Drawer anchor='left' open={this.state.showDrowser} onClose={this.toggleDrawer(false)}>\r\n            <DrawerList classes={classes} toggleDrawer={this.toggleDrawer}/>\r\n          </Drawer>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    isLoading       : selectIsFetchingUserAuth(state),\r\n    isUserLoggedIn  : selectIsUserLogedIn(state),\r\n    isError         : selectIsUserAuthError(state),\r\n    userData        : selectLogedInUserData(state)\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    startFetchingLoginDetails : () =>dispatch(startFetchingUserLoginDetailsAsync())\r\n})\r\n\r\nexport default  compose( \r\n    withStyles(useStyles, { withTheme: true }),\r\n    connect(mapStateToProps , mapDispatchToProps)\r\n)(HeaderCompoennt);\r\n\r\n\r\n// let google={\r\n//   callbackUrl : 'ds',\r\n//   scope       : 'eamil & profile'\r\n// }\r\n// https://accounts.google.com/o/oauth2/v2/auth/oauthchooseaccount?\r\n// let queryParams =[]\r\n// `response_type=code`,\r\n// `redirect_uri=${google.callbackUrl}`\r\n// `scope=${google.scope}`\r\n// client_id=637912965377-f1md8uulfcmlr2cdstbrct49pdvesn56.apps.googleusercontent.com&\r\n// flowName=GeneralOAuthFlow\r\n// const url ='https://accounts.google.com/o/oauth2/v2/auth/oauthchooseaccount?response_type=code&redirect_uri=http%3A%2F%2Flocalhost%3A5000%2Fauth%2Fgoogle%2Fcallback&scope=email%20profile&client_id=637912965377-f1md8uulfcmlr2cdstbrct49pdvesn56.apps.googleusercontent.com&flowName=GeneralOAuthFlow'\r\n","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.action.js",["102"],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.selector.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\utils\\error.logger.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\user-persona\\userPersona.component.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\utils\\server.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\stripe-checkout\\Stripe-checkout.component.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\home-component\\home.component.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\NewSurveyDashboard.jsx",["103"],"import React from 'react';\r\nimport './newSurveys.styles.scss';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, Link} from 'react-router-dom'\r\nimport {selectIsUserLogedIn} from '../../store/authReducers/auth.selector';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nconst SurveyDashBoardCompoent = ({isUserLoggedIn})=>{\r\n    console.log('isUserLoggedIn', isUserLoggedIn);\r\n    if(!isUserLoggedIn){\r\n        return <Redirect to='/'/>\r\n    }\r\n    return(\r\n             <div className='survey-container'>\r\n                  <div className='survey-display-container'> Surveys</div>  \r\n                    <Link to='/surveys/create-new-surveys' className='add-new-survey-iocn'>\r\n                    <AddCircleIcon   \r\n                        style={{width: 100, height: 100}} \r\n                        color='secondary'/>\r\n                    </Link>\r\n            </div>\r\n           \r\n    )\r\n}\r\nconst mapStateToProps =(state)=>({\r\n    isUserLoggedIn : selectIsUserLogedIn(state)\r\n})\r\nexport default  connect(mapStateToProps)(SurveyDashBoardCompoent)","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\footer\\Footer.component.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\add-new-survey\\add-new-surveys-form.jsx",["104"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './add-new-surveys-forms.styles.scss';\r\nimport {Link} from 'react-router-dom';\r\nimport FormInput from '../../custum-component/form-input/form-input.component';\r\nimport {selectUserCredits, selectUserFormData} from '../../../store/authReducers/auth.selector';\r\nimport StripeCheckout from '../../stripe-checkout/Stripe-checkout.component';\r\nimport ErrorCompoennt from '../../custum-component/error/error.component' ;\r\nimport {addSurveyFormDataToReducer} from '../../../store/authReducers/auth.action'\r\n\r\n\r\nconst AddNewSurveysForm = ({userCredit, userFormData, saveData}) => {\r\n    const defaultFormValue = {\r\n        title           :   '',\r\n        subject         :   '',\r\n        body            :   '',\r\n        recipientList   : []\r\n    }\r\n    const [formValue , setFormValue] = React.useState( userFormData? userFormData:defaultFormValue);\r\n    // const []\r\n    const onFormValueChange = (event) =>{\r\n        const {name, value} = event.target;\r\n        setFormValue({...formValue, [`${name}`]: value })\r\n    }\r\n    const formatRecipientList =(recipientList) =>{\r\n        return  String(recipientList).split(',').map(eachRecipeint => eachRecipeint.trim());\r\n    }\r\n    const onFormSubmmit =(event) => {\r\n        event.preventDefault();\r\n        let data = formValue;\r\n        data.recipientList = formatRecipientList(formValue.recipientList)\r\n        saveData(data);\r\n       \r\n    }\r\n    const {title, subject, body, recipientList} = formValue;\r\n    if(userCredit === 0){\r\n        return  <div className ='new-form-error-container'>\r\n               <ErrorCompoennt message = ' You dont have enough credit to generate new survey '/>\r\n                <StripeCheckout> \r\n                    <div className ='add-credit-form'>  \r\n                        Add Credit\r\n                    </div> \r\n                   </StripeCheckout>\r\n             </div>\r\n    }\r\n    return (\r\n        <div className='add-new-survey-form-container'>\r\n            <div className='form-container'>\r\n                <div className='form-header'>Please fill out following surveys details </div>\r\n                <form onSubmit={onFormSubmmit}> \r\n                        <FormInput \r\n                            type  ='text'\r\n                            name  ='title'\r\n                            label ='Title'\r\n                            value = {title}\r\n                            required\r\n                            handleChange ={onFormValueChange}\r\n                        />\r\n                        <FormInput \r\n                            type  ='text'\r\n                            name  ='subject'\r\n                            label ='Subject of the mail'\r\n                            value = {subject}\r\n                            required\r\n                            handleChange ={onFormValueChange}\r\n                        />\r\n                        <FormInput \r\n                            type  ='text'\r\n                            name  ='body'\r\n                            label ='Body of the mail'\r\n                            value = {body}\r\n                            required\r\n                            handleChange ={onFormValueChange}\r\n                        />\r\n                        <FormInput \r\n                            type  ='text'\r\n                            name  ='recipientList'\r\n                            label ='Comma seprated Resipient list'\r\n                            value = {recipientList}\r\n                            required\r\n                            handleChange ={onFormValueChange}\r\n                        />\r\n                        <div className = 'submit-button-container'>\r\n                           {/* <button className ='button'><Link to ='/surveys'>  Cancel </Link></button> */}\r\n                            <button className ='button' type='submit'> submit </button>\r\n                        </div>\r\n                    </form>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n    \r\n}\r\nconst mapStateToProps = state => ({\r\n    userCredit      : selectUserCredits(state),\r\n    userFormData    : selectUserFormData(state) \r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    saveData: (formData)=> dispatch(addSurveyFormDataToReducer(formData))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewSurveysForm);","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\custum-component\\form-input\\form-input.component.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\custum-component\\error\\error.component.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\Survey-stepper.container.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\custum-component\\stepper-component\\stepper.component.jsx",["105"],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\display-user-from-data\\ShowUserFormdataComponent.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\user-response\\UserResponse.component.jsx",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":21},{"ruleId":"110","severity":1,"message":"114","line":28,"column":45,"nodeType":"112","messageId":"113","endLine":28,"endColumn":65},{"ruleId":"110","severity":1,"message":"115","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":18},{"ruleId":"110","severity":1,"message":"116","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":18},{"ruleId":"110","severity":1,"message":"117","line":4,"column":9,"nodeType":"112","messageId":"113","endLine":4,"endColumn":13},{"ruleId":"110","severity":1,"message":"118","line":10,"column":8,"nodeType":"112","messageId":"113","endLine":10,"endColumn":14},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'FooterContact' is defined but never used.","Identifier","unusedVar","'startLoginWithGoogle' is defined but never used.","'SERVER_URL' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]