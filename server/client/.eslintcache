[{"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\index.js":"1","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\reportWebVitals.js":"2","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\store.js":"3","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\app\\App.js":"4","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.reducers.js":"5","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.actiontypes.js":"6","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\header\\Header.component.jsx":"7","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.action.js":"8","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.selector.js":"9","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\utils\\error.logger.js":"10","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\user-persona\\userPersona.component.jsx":"11","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\utils\\server.js":"12","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\stripe-checkout\\Stripe-checkout.component.jsx":"13","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\home-component\\home.component.jsx":"14","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\NewSurveyDashboard.jsx":"15","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\footer\\Footer.component.jsx":"16","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\add-new-survey\\add-new-surveys-form.jsx":"17","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\custum-component\\form-input\\form-input.component.jsx":"18","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\custum-component\\error\\error.component.jsx":"19","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\Survey-stepper.container.jsx":"20","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\custum-component\\stepper-component\\stepper.component.jsx":"21","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\display-user-from-data\\ShowUserFormdataComponent.jsx":"22","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\user-response\\UserResponse.component.jsx":"23","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\profile\\user-profile.component.jsx":"24"},{"size":778,"mtime":1609776093730,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":509,"mtime":1610196715073,"results":"28","hashOfConfig":"26"},{"size":1683,"mtime":1610741630233,"results":"29","hashOfConfig":"26"},{"size":5217,"mtime":1610737869610,"results":"30","hashOfConfig":"26"},{"size":1613,"mtime":1610735781699,"results":"31","hashOfConfig":"26"},{"size":5797,"mtime":1610745601575,"results":"32","hashOfConfig":"26"},{"size":7029,"mtime":1610736397011,"results":"33","hashOfConfig":"26"},{"size":2117,"mtime":1610737440617,"results":"34","hashOfConfig":"26"},{"size":230,"mtime":1610083066527,"results":"35","hashOfConfig":"26"},{"size":6143,"mtime":1610743612962,"results":"36","hashOfConfig":"26"},{"size":209,"mtime":1609840128074,"results":"37","hashOfConfig":"26"},{"size":1004,"mtime":1610441830052,"results":"38","hashOfConfig":"26"},{"size":1280,"mtime":1610441373635,"results":"39","hashOfConfig":"26"},{"size":3833,"mtime":1610734697001,"results":"40","hashOfConfig":"26"},{"size":1381,"mtime":1610436820782,"results":"41","hashOfConfig":"26"},{"size":4356,"mtime":1610570483640,"results":"42","hashOfConfig":"26"},{"size":531,"mtime":1610384926486,"results":"43","hashOfConfig":"26"},{"size":460,"mtime":1610447951166,"results":"44","hashOfConfig":"26"},{"size":1002,"mtime":1610646967810,"results":"45","hashOfConfig":"26"},{"size":7829,"mtime":1610630436229,"results":"46","hashOfConfig":"26"},{"size":1465,"mtime":1610628202793,"results":"47","hashOfConfig":"26"},{"size":3649,"mtime":1610646595088,"results":"48","hashOfConfig":"26"},{"size":1707,"mtime":1610742621765,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"18942s7",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\index.js",[],["101","102"],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\reportWebVitals.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\store.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\app\\App.js",["103"],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.reducers.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.actiontypes.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\header\\Header.component.jsx",["104"],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.action.js",["105"],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\store\\authReducers\\auth.selector.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\utils\\error.logger.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\user-persona\\userPersona.component.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\utils\\server.js",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\stripe-checkout\\Stripe-checkout.component.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\home-component\\home.component.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\NewSurveyDashboard.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\footer\\Footer.component.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\add-new-survey\\add-new-surveys-form.jsx",["106"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './add-new-surveys-forms.styles.scss';\r\nimport {Link} from 'react-router-dom';\r\nimport FormInput from '../../custum-component/form-input/form-input.component';\r\nimport {selectUserCredits, selectUserFormData} from '../../../store/authReducers/auth.selector';\r\nimport StripeCheckout from '../../stripe-checkout/Stripe-checkout.component';\r\nimport ErrorCompoennt from '../../custum-component/error/error.component' ;\r\nimport {addSurveyFormDataToReducer} from '../../../store/authReducers/auth.action'\r\n\r\n\r\nconst AddNewSurveysForm = ({userCredit, userFormData, saveData}) => {\r\n    const defaultFormValue = {\r\n        title           :   '',\r\n        subject         :   '',\r\n        body            :   '',\r\n        recipientList   : []\r\n    }\r\n    const [formValue , setFormValue] = React.useState( userFormData? userFormData:defaultFormValue);\r\n    // const []\r\n    const onFormValueChange = (event) =>{\r\n        const {name, value} = event.target;\r\n        setFormValue({...formValue, [`${name}`]: value })\r\n    }\r\n    const formatRecipientList =(recipientList) =>{\r\n        return  String(recipientList).split(',').map(eachRecipeint => eachRecipeint.trim());\r\n    }\r\n    const onFormSubmmit =(event) => {\r\n        event.preventDefault();\r\n        let data = formValue;\r\n        data.recipientList = formatRecipientList(formValue.recipientList)\r\n        saveData(data);\r\n       \r\n    }\r\n    const {title, subject, body, recipientList} = formValue;\r\n    if(userCredit === 0){\r\n        return  <div className ='new-form-error-container'>\r\n               <ErrorCompoennt message = ' You dont have enough credit to generate new survey '/>\r\n                <StripeCheckout> \r\n                    <div className ='add-credit-form'>  \r\n                        Add Credit\r\n                    </div> \r\n                   </StripeCheckout>\r\n             </div>\r\n    }\r\n    return (\r\n        <div className='add-new-survey-form-container'>\r\n            <div className='form-container'>\r\n                <div className='form-header'>Please fill out following surveys details </div>\r\n                <form onSubmit={onFormSubmmit}> \r\n                        <FormInput \r\n                            type  ='text'\r\n                            name  ='title'\r\n                            label ='Title'\r\n                            value = {title}\r\n                            required\r\n                            handleChange ={onFormValueChange}\r\n                        />\r\n                        <FormInput \r\n                            type  ='text'\r\n                            name  ='subject'\r\n                            label ='Subject of the mail'\r\n                            value = {subject}\r\n                            required\r\n                            handleChange ={onFormValueChange}\r\n                        />\r\n                        <FormInput \r\n                            type  ='text'\r\n                            name  ='body'\r\n                            label ='Body of the mail'\r\n                            value = {body}\r\n                            required\r\n                            handleChange ={onFormValueChange}\r\n                        />\r\n                        <FormInput \r\n                            type  ='text'\r\n                            name  ='recipientList'\r\n                            label ='Comma seprated Resipient list'\r\n                            value = {recipientList}\r\n                            required\r\n                            handleChange ={onFormValueChange}\r\n                        />\r\n                        <div className = 'submit-button-container'>\r\n                           {/* <button className ='button'><Link to ='/surveys'>  Cancel </Link></button> */}\r\n                            <button className ='button' type='submit'> submit </button>\r\n                        </div>\r\n                    </form>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n    \r\n}\r\nconst mapStateToProps = state => ({\r\n    userCredit      : selectUserCredits(state),\r\n    userFormData    : selectUserFormData(state) \r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    saveData: (formData)=> dispatch(addSurveyFormDataToReducer(formData))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewSurveysForm);","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\custum-component\\form-input\\form-input.component.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\custum-component\\error\\error.component.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\Survey-stepper.container.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\custum-component\\stepper-component\\stepper.component.jsx",["107"],"\r\nimport React from 'react';\r\nimport './stepper.styles.scss';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\n\r\n\r\n\r\nimport {withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\n\r\nimport {clearSurveyFormDataFromReducer, startGeneratingSurveyAsync, resetSurveyStatus} from '../../../store/authReducers/auth.action';\r\nimport {selectUserFormData, selectLogedInUserData, \r\n        selectErrorGeneratingSurvey, selectSurveyGeneratorSuccess,\r\n        selectIsLoadingSurvey as selectIsGeneratingSurvey} from '../../../store/authReducers/auth.selector'\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    minHeight: '89vh',\r\n    backgroundColor:'whitesmoke'\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  generationSurveyContainer:{\r\n      display: 'flex',\r\n      padding: '50px 0px',\r\n      height  : '30vh', \r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between'\r\n  },\r\n  generatingMsg: {\r\n    fontSize: '2rem',\r\n    color: 'cornflowerblue',\r\n    fontWeight: 'bold'\r\n  },\r\n  timmer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-around', \r\n    alignItems: 'center',\r\n    fontSize: '1rem',\r\n    color: 'red',\r\n    fontWeight: 'bold',\r\n    height: '60vh'\r\n\r\n  }\r\n}));\r\n\r\nconst Alert = (props)=> {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst  StepperComponent =({components, headerTitle, history, userFormData, resetSurveyStatus,\r\n                          isErrorGeneratingSurvey, isSuccessGeneratinSurvey,\r\n                          clearFormData, startGenerateForm,userData, isGeneratingSurvey}) => {\r\n  const classes = useStyles();\r\n\r\n  const [openSnackBar, setOpenSnackBar]           = React.useState(false);\r\n  const [SnackbarServity, setSnackbarServity]     = React.useState('');\r\n  const [SnackbarMessage, setSnackBarMessage]     = React.useState('');\r\n  const [activeStep, setActiveStep]               = React.useState(0);\r\n\r\n  const steps = headerTitle;\r\n\r\n  const handleNext = () => {\r\n    if(activeStep === steps.length - 1){\r\n       startGenerateForm({surveyData: userFormData, user_profile_id: userData.profile_id});\r\n    }\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n  const resetStepper =()=>{\r\n    setActiveStep(0);\r\n    setOpenSnackBar(false);\r\n    resetSurveyStatus();\r\n  }\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenSnackBar(false);\r\n  };\r\n  React.useEffect(()=>{\r\n    if(userFormData){\r\n      setOpenSnackBar(true);\r\n      setSnackbarServity('success')\r\n      setSnackBarMessage('Form value successfully store, click next to proceed');\r\n    }\r\n    if(isErrorGeneratingSurvey){\r\n      setOpenSnackBar(true);\r\n      setSnackbarServity('error')\r\n      setSnackBarMessage('Error generating survey');\r\n    }\r\n    if(isSuccessGeneratinSurvey){\r\n      setOpenSnackBar(true);\r\n      setSnackbarServity('success')\r\n      setSnackBarMessage('Success generating Survey');\r\n    }\r\n  },[userFormData, isErrorGeneratingSurvey, isSuccessGeneratinSurvey]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Snackbar open={openSnackBar} autoHideDuration={6000} onClose={handleCloseSnackBar}\r\n           anchorOrigin={{vertical: 'top', horizontal: 'center' }}\r\n        >\r\n            <Alert onClose={handleCloseSnackBar} severity={SnackbarServity}>\r\n              {SnackbarMessage}\r\n            </Alert>\r\n        </Snackbar>\r\n      <Stepper style={{backgroundColor: 'whitesmoke'}} activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <>\r\n              { !isSuccessGeneratinSurvey && <div  className={classes.generationSurveyContainer} >\r\n                  <Typography  className={classes.generatingMsg}>\r\n                    {!isSuccessGeneratinSurvey && !isErrorGeneratingSurvey && <> Generating Survey please wait</> }\r\n                    {isErrorGeneratingSurvey   && <div  className='final-button' onClick={resetStepper}> Error Occured Try Again</div> }\r\n                    </Typography>\r\n                  {isGeneratingSurvey && <CircularProgress color=\"secondary\"/>}\r\n                 </div>\r\n                }\r\n                { isSuccessGeneratinSurvey  && \r\n                        <div className ={classes.timmer}>   \r\n                          <div style={{fontSize: '3rem', color: 'blue'}} > Survey generated successfully!!</div>\r\n                          <div> redirecting back to Survey dashboard page</div>\r\n                          <CountdownCircleTimer isPlaying duration={10}\r\n                              colors={[\r\n                                    ['#004777', 0.33],\r\n                                    ['#F7B801', 0.33],\r\n                                    ['#A30000', 0.33],\r\n                                ]}\r\n                                onComplete ={()=> {resetStepper(); history.push('/surveys')}}\r\n                                >\r\n                               {({ remainingTime }) => `${remainingTime}`}\r\n                          </CountdownCircleTimer>\r\n                        </div>\r\n                }\r\n            </>\r\n              \r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n               { components[activeStep]}\r\n            </Typography>\r\n            <div className='form-button-container'>\r\n              <button  className='stepper-button' onClick={ \r\n                      (activeStep === 0)? \r\n                            ()=>{clearFormData();history.push('/surveys')} \r\n                              :handleBack }\r\n                >Back\r\n              </button>\r\n              <button  className='stepper-button'  style={!userFormData?{cursor: 'not-allowed'}:{}}\r\n              onClick={handleNext} disabled={!userFormData} title={!userFormData ? 'please submit form first': 'click next to proceed'}>\r\n                {/* */}\r\n                 {activeStep === steps.length - 1 ? 'Generate Survey' : 'Next'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state =>({\r\n    userFormData                : selectUserFormData(state),\r\n    userData                    : selectLogedInUserData(state),\r\n    isGeneratingSurvey          : selectIsGeneratingSurvey(state),\r\n    isErrorGeneratingSurvey     : selectErrorGeneratingSurvey(state),\r\n    isSuccessGeneratinSurvey    : selectSurveyGeneratorSuccess(state)\r\n})\r\nconst mapDispatchToProps = dispatch =>({\r\n  clearFormData     : ()=> dispatch(clearSurveyFormDataFromReducer()),\r\n  resetSurveyStatus : ()=> dispatch(resetSurveyStatus()),\r\n  startGenerateForm : (surveyData)=> dispatch(startGeneratingSurveyAsync(surveyData))\r\n\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withRouter\r\n  )(StepperComponent)\r\n\r\n","D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\surveys\\display-user-from-data\\ShowUserFormdataComponent.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\user-response\\UserResponse.component.jsx",[],"D:\\projects\\Node\\Udemy Node\\server\\client\\src\\components\\profile\\user-profile.component.jsx",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":21},{"ruleId":"112","severity":1,"message":"116","line":28,"column":45,"nodeType":"114","messageId":"115","endLine":28,"endColumn":65},{"ruleId":"112","severity":1,"message":"117","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":18},{"ruleId":"112","severity":1,"message":"118","line":4,"column":9,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"112","severity":1,"message":"119","line":10,"column":8,"nodeType":"114","messageId":"115","endLine":10,"endColumn":14},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'FooterContact' is defined but never used.","Identifier","unusedVar","'startLoginWithGoogle' is defined but never used.","'SERVER_URL' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]